{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/sanger-tol/longreadmag/master/nextflow_schema.json",
    "title": "sanger-tol/longreadmag pipeline parameters",
    "description": "Construct MAGs from long reads.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(yaml|yml)$",
                    "description": "Path to YAML file describing the input data.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "assembly_options": {
            "title": "Assembly options",
            "type": "object",
            "description": "Options relating to metagenomic de-novo assembly.",
            "default": "",
            "properties": {
                "enable_assembly": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable de-novo assembly of HiFi reads."
                },
                "enable_metamdbg": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable assembly with metaMDBG."
                }
            }
        },
        "assembly_qc_options": {
            "title": "Assembly QC options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "enable_rrna_prediction": {
                    "type": "boolean",
                    "default": true,
                    "description": "Predict ribosomal RNA (rRNA) genes in assemblies using Infernal and the included Rfam covariance models."
                }
            }
        },
        "binning_options": {
            "title": "Binning options",
            "type": "object",
            "description": "Options relating to binning of de-novo metagenome assemblies.",
            "default": "",
            "properties": {
                "enable_binning": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable binning of metagenomes into genome bins."
                },
                "enable_metabat2": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable binning with Metabat2."
                },
                "enable_maxbin2": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable binning with MaxBin2."
                },
                "enable_bin3c": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable binning with Bin3C."
                },
                "enable_metator": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable binning with MetaTor."
                },
                "minimum_contig_size": {
                    "type": "integer",
                    "default": 3000,
                    "description": "The minimum size of contig to be considered when binning. This option applies to MetaBat2, MaxBin2, and Bin3C, but not Metator."
                },
                "min_hifi_perc_identity": {
                    "type": "integer",
                    "default": 97,
                    "description": "The minimum required percent identity of a read mapping to the assembly to be counted during coverage estimation for MetaBat2 and MaxBin2."
                }
            }
        },
        "bin_refinement_options": {
            "title": "Bin refinement options",
            "type": "object",
            "description": "Options relating to the refinement of genome bins.",
            "default": "",
            "properties": {
                "enable_bin_refinement": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable refinement of genome bins."
                },
                "enable_dastool": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable bin refinement using DAS_Tool."
                },
                "enable_magscot": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable bin refinement using MagScoT."
                },
                "hmm_gtdb_pfam": {
                    "type": "string",
                    "description": "Path to the GTDB r207 Pfam HMM database.",
                    "default": "/lustre/scratch123/tol/teams/tola/users/jd42/longreadmag_testing/longreadmag/assets/gtdbtk_rel207_Pfam-A.hmm"
                },
                "hmm_gtdb_tigrfam": {
                    "type": "string",
                    "description": "Path to the GTDB r207 TigrFam HMM database.",
                    "default": "/lustre/scratch123/tol/teams/tola/users/jd42/longreadmag_testing/longreadmag/assets/gtdbtk_rel207_tigrfam.hmm"
                }
            }
        },
        "bin_qc_options": {
            "title": "Bin QC options",
            "type": "object",
            "description": "Options relating to the quality checking of genome bins.",
            "default": "",
            "properties": {
                "enable_binqc": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable quality checks of genome bins."
                },
                "enable_checkm2": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable QC using CheckM2."
                },
                "checkm2_db_version": {
                    "type": "integer",
                    "default": 5571251,
                    "description": "If no local CheckM2 database provided, the Zenodo record ID of a CheckM2 database to download."
                },
                "checkm2_local_db": {
                    "type": "string",
                    "description": "Path to a local diamond database file for CheckM2."
                },
                "enable_trnascan_se": {
                    "type": "boolean",
                    "default": true,
                    "description": "Predict tRNAs in genome bins using tRNAscan-SE."
                }
            }
        },
        "bin_taxonomy_options": {
            "title": "Bin taxonomy options",
            "type": "object",
            "description": "Options relating to the taxonomic classification of genome bins.",
            "default": "",
            "properties": {
                "enable_taxonomy": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable taxonomic classification of genome bins."
                },
                "enable_gtdbtk": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable taxonomic classification with GTDB-Tk."
                },
                "gtdbtk_db": {
                    "type": "string",
                    "description": "Path to a directory containing the GTDB-Tk database."
                },
                "gtdb_bac120_metadata": {
                    "type": "string",
                    "default": "https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/bac120_metadata.tsv.gz",
                    "description": "Path to the GTDB-Tk bac120 metadata file."
                },
                "gtdb_ar53_metadata": {
                    "type": "string",
                    "default": "https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ar53_metadata.tsv.gz",
                    "description": "Path to the GTDB-Tk ar53 metadata file."
                },
                "gtdbtk_mash_db": {
                    "type": "string",
                    "description": "Path to a mash database built using the GTDB genomes."
                },
                "gtdbtk_min_completeness": {
                    "type": "integer",
                    "default": 50,
                    "description": "Minimum CheckM2 completeness required for a bin to be classified by GTDB-Tk."
                },
                "gtdbtk_max_contamination": {
                    "type": "integer",
                    "default": 10,
                    "description": "Maximum contamination allowed CheckM2 completeness for a bin to be classified by GTDB-Tk."
                },
                "ncbi_taxonomy_dir": {
                    "type": "string",
                    "description": "Path to directory containing the names.dmp, nodes.dmp, delnodes.dmp, and merged.dmp files from the NCBI taxdump archive (ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz)"
                }
            }
        },
        "summary_options": {
            "title": "Summary options",
            "type": "object",
            "description": "General options relating to pipeline operation.",
            "default": "",
            "properties": {
                "enable_summary": {
                    "type": "boolean",
                    "default": true,
                    "description": "Produce a final summary file about each genome bin."
                },
                "completeness_score": {
                    "type": "integer",
                    "default": 1,
                    "description": "Multiplier for completeness when scoring bins for the bin summary. Used in formula (compleneness_score * completeness - contamination_score * contamination)."
                },
                "contamination_score": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Multiplier for contamination when scoring bins for the bin summary. Used in formula (compleneness_score * completeness - contamination_score * contamination)."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "lrm_pipelines_testdata_base_path": {
                    "type": "string",
                    "default": "https://raw.githubusercontent.com/prototaxites/lrm_testdata/refs/heads/main/",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/assembly_options"
        },
        {
            "$ref": "#/$defs/assembly_qc_options"
        },
        {
            "$ref": "#/$defs/binning_options"
        },
        {
            "$ref": "#/$defs/bin_refinement_options"
        },
        {
            "$ref": "#/$defs/bin_qc_options"
        },
        {
            "$ref": "#/$defs/bin_taxonomy_options"
        },
        {
            "$ref": "#/$defs/summary_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
